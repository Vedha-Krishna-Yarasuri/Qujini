# Generated by Django 2.2.5 on 2019-10-02 11:52

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Type',
                'verbose_name_plural': 'Types',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Questions.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_mark', models.IntegerField()),
                ('max_mark', models.IntegerField(null=True)),
                ('difficulty', models.CharField(choices=[('Very Easy', 'VeryEasy'), ('Easy', 'Easy'), ('Moderate', 'Moderate'), ('Expert', 'Expert')], default='Very Easy', max_length=20)),
                ('date', models.DateField()),
                ('question', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('questionType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Questions.Type')),
                ('topic', models.ManyToManyField(to='Questions.Topic')),
            ],
        ),
    ]
